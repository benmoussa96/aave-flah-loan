{
  "address": "0xB9b92887C57E835ac2B863F2A2848B545344F8a6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_daiAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdcAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MockDex__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "buyDAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "daiBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositDAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "depositUSDC",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellDAI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "usdcBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x97eac4a17fd87ee46f07c168b807e2ee6120e833a056121e26ab18890bc5c186",
  "receipt": {
    "to": null,
    "from": "0x52d08C276BD3e8dA6F3Df6d901de7E7B0B176144",
    "contractAddress": "0xB9b92887C57E835ac2B863F2A2848B545344F8a6",
    "transactionIndex": 64,
    "gasUsed": "944660",
    "logsBloom": "0x
    "blockHash": "0x1e4b37d6988e0fa7f6b9550e78ac2b03c29c3c6bfa92df0af5e6aef63b619753",
    "transactionHash": "0x97eac4a17fd87ee46f07c168b807e2ee6120e833a056121e26ab18890bc5c186",
    "logs": [],
    "blockNumber": 8327746,
    "cumulativeGasUsed": "13828146",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xDF1742fE5b0bFc12331D8EAec6b478DfDbD31464",
    "0xA2025B15a1757311bfD68cb14eaeFCc237AF5b43"
  ],
  "numDeployments": 1,
  "solcInputHash": "dd647ed7fdc7a655bd27e1a1f46d3581",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_daiAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MockDex__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"buyDAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"daiBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositDAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositUSDC\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellDAI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"usdcBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockDex.sol\":\"MockDex\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.10;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n  /**\\n   * @dev Returns the amount of tokens in existence.\\n   */\\n  function totalSupply() external view returns (uint256);\\n\\n  /**\\n   * @dev Returns the amount of tokens owned by `account`.\\n   */\\n  function balanceOf(address account) external view returns (uint256);\\n\\n  /**\\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Returns the remaining number of tokens that `spender` will be\\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n   * zero by default.\\n   *\\n   * This value changes when {approve} or {transferFrom} are called.\\n   */\\n  function allowance(address owner, address spender) external view returns (uint256);\\n\\n  /**\\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n   * that someone may use both the old and the new allowance by unfortunate\\n   * transaction ordering. One possible solution to mitigate this race\\n   * condition is to first reduce the spender's allowance to 0 and set the\\n   * desired value afterwards:\\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n   *\\n   * Emits an {Approval} event.\\n   */\\n  function approve(address spender, uint256 amount) external returns (bool);\\n\\n  /**\\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n   * allowance mechanism. `amount` is then deducted from the caller's\\n   * allowance.\\n   *\\n   * Returns a boolean value indicating whether the operation succeeded.\\n   *\\n   * Emits a {Transfer} event.\\n   */\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n\\n  /**\\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n   * another (`to`).\\n   *\\n   * Note that `value` may be zero.\\n   */\\n  event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n  /**\\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n   * a call to {approve}. `value` is the new allowance.\\n   */\\n  event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x17894e217eb1056c22fbdaf8317a04f31b27e840455f075222d202acfcbf793d\",\"license\":\"AGPL-3.0\"},\"contracts/MockDex.sol\":{\"content\":\"// contracts/FlashLoan.sol\\n// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport {IERC20} from \\\"@aave/core-v3/contracts/dependencies/openzeppelin/contracts/IERC20.sol\\\";\\n\\nerror MockDex__NotOwner();\\n\\ncontract MockDex {\\n    address private immutable i_owner;\\n\\n    // Aave ERC20 Token addresses on Goerli network\\n    // address private immutable daiAddress =\\n    //     0xDF1742fE5b0bFc12331D8EAec6b478DfDbD31464;\\n    // address private immutable usdcAddress =\\n    //     0xA2025B15a1757311bfD68cb14eaeFCc237AF5b43;\\n\\n    IERC20 private dai;\\n    IERC20 private usdc;\\n\\n    // exchange rate indexes\\n    uint256 dexARate = 90;\\n    uint256 dexBRate = 100;\\n\\n    // keeps track of individuals' dai balances\\n    mapping(address => uint256) public daiBalances;\\n\\n    // keeps track of individuals' USDC balances\\n    mapping(address => uint256) public usdcBalances;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) { revert MockDex__NotOwner(); }\\n        _;\\n    }\\n\\n    constructor(address _daiAddress, address _usdcAddress) {\\n        i_owner = msg.sender;\\n        dai = IERC20(_daiAddress);\\n        usdc = IERC20(_usdcAddress);\\n    }\\n\\n    function depositUSDC(uint256 _amount) external {\\n        usdcBalances[msg.sender] += _amount;\\n        uint256 allowance = usdc.allowance(msg.sender, address(this));\\n        require(allowance >= _amount, \\\"Check the token allowance\\\");\\n        usdc.transferFrom(msg.sender, address(this), _amount);\\n    }\\n\\n    function depositDAI(uint256 _amount) external {\\n        daiBalances[msg.sender] += _amount;\\n        uint256 allowance = dai.allowance(msg.sender, address(this));\\n        require(allowance >= _amount, \\\"Check the token allowance\\\");\\n        dai.transferFrom(msg.sender, address(this), _amount);\\n    }\\n\\n    function buyDAI() external {\\n        uint256 daiToReceive = ((usdcBalances[msg.sender] / dexARate) * 100) *\\n            (10**12);\\n        dai.transfer(msg.sender, daiToReceive);\\n    }\\n\\n    function sellDAI() external {\\n        uint256 usdcToReceive = ((daiBalances[msg.sender] * dexBRate) / 100) /\\n            (10**12);\\n        usdc.transfer(msg.sender, usdcToReceive);\\n    }\\n\\n    function getBalance(address _tokenAddress) external view returns (uint256) {\\n        return IERC20(_tokenAddress).balanceOf(address(this));\\n    }\\n\\n    function withdraw(address _tokenAddress) external onlyOwner {\\n        IERC20 token = IERC20(_tokenAddress);\\n        token.transfer(msg.sender, token.balanceOf(address(this)));\\n    }\\n\\n    receive() external payable {}\\n}\",\"keccak256\":\"0xe305d400f6c46de5a8e48a0320d9123abda92844b314cbb8b7be2e5ad30daa83\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052605a60025560646003553480156200001b57600080fd5b506040516200103938038062001039833981810160405281019062000041919062000168565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001af565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001308262000103565b9050919050565b620001428162000123565b81146200014e57600080fd5b50565b600081519050620001628162000137565b92915050565b60008060408385031215620001825762000181620000fe565b5b6000620001928582860162000151565b9250506020620001a58582860162000151565b9150509250929050565b608051610e6e620001cb60003960006105ec0152610e6e6000f3fe60806040526004361061007f5760003560e01c8063a99c68c51161004e578063a99c68c51461010b578063ef06734214610148578063f688bcfb14610185578063f8b2cb4f146101ae57610086565b806305abf9041461008b57806315602991146100a2578063365833e1146100b957806351cff8d9146100e257610086565b3661008657005b600080fd5b34801561009757600080fd5b506100a06101eb565b005b3480156100ae57600080fd5b506100b76102fa565b005b3480156100c557600080fd5b506100e060048036038101906100db9190610a40565b61040b565b005b3480156100ee57600080fd5b5061010960048036038101906101049190610acb565b6105ea565b005b34801561011757600080fd5b50610132600480360381019061012d9190610acb565b610770565b60405161013f9190610b07565b60405180910390f35b34801561015457600080fd5b5061016f600480360381019061016a9190610acb565b610788565b60405161017c9190610b07565b60405180910390f35b34801561019157600080fd5b506101ac60048036038101906101a79190610a40565b6107a0565b005b3480156101ba57600080fd5b506101d560048036038101906101d09190610acb565b610982565b6040516101e29190610b07565b60405180910390f35b600064e8d4a510006064600254600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102429190610b80565b61024c9190610bb1565b6102569190610bb1565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102b3929190610c1a565b6020604051808303816000875af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610c7b565b5050565b600064e8d4a510006064600354600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103519190610bb1565b61035b9190610b80565b6103659190610b80565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103c4929190610c1a565b6020604051808303816000875af11580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104079190610c7b565b5050565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461045a9190610ca8565b9250508190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016104bf929190610cfe565b602060405180830381865afa1580156104dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105009190610d3c565b905081811015610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053c90610dc6565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105a293929190610de6565b6020604051808303816000875af11580156105c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e59190610c7b565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461066f576040517f4a99cf0800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106ca9190610e1d565b602060405180830381865afa1580156106e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070b9190610d3c565b6040518363ffffffff1660e01b8152600401610728929190610c1a565b6020604051808303816000875af1158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190610c7b565b505050565b60056020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107ef9190610ca8565b925050819055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610855929190610cfe565b602060405180830381865afa158015610872573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108969190610d3c565b9050818110156108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d290610dc6565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161093a93929190610de6565b6020604051808303816000875af1158015610959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097d9190610c7b565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109bd9190610e1d565b602060405180830381865afa1580156109da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fe9190610d3c565b9050919050565b600080fd5b6000819050919050565b610a1d81610a0a565b8114610a2857600080fd5b50565b600081359050610a3a81610a14565b92915050565b600060208284031215610a5657610a55610a05565b5b6000610a6484828501610a2b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9882610a6d565b9050919050565b610aa881610a8d565b8114610ab357600080fd5b50565b600081359050610ac581610a9f565b92915050565b600060208284031215610ae157610ae0610a05565b5b6000610aef84828501610ab6565b91505092915050565b610b0181610a0a565b82525050565b6000602082019050610b1c6000830184610af8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b8b82610a0a565b9150610b9683610a0a565b925082610ba657610ba5610b22565b5b828204905092915050565b6000610bbc82610a0a565b9150610bc783610a0a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0057610bff610b51565b5b828202905092915050565b610c1481610a8d565b82525050565b6000604082019050610c2f6000830185610c0b565b610c3c6020830184610af8565b9392505050565b60008115159050919050565b610c5881610c43565b8114610c6357600080fd5b50565b600081519050610c7581610c4f565b92915050565b600060208284031215610c9157610c90610a05565b5b6000610c9f84828501610c66565b91505092915050565b6000610cb382610a0a565b9150610cbe83610a0a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cf357610cf2610b51565b5b828201905092915050565b6000604082019050610d136000830185610c0b565b610d206020830184610c0b565b9392505050565b600081519050610d3681610a14565b92915050565b600060208284031215610d5257610d51610a05565b5b6000610d6084828501610d27565b91505092915050565b600082825260208201905092915050565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b6000610db0601983610d69565b9150610dbb82610d7a565b602082019050919050565b60006020820190508181036000830152610ddf81610da3565b9050919050565b6000606082019050610dfb6000830186610c0b565b610e086020830185610c0b565b610e156040830184610af8565b949350505050565b6000602082019050610e326000830184610c0b565b9291505056fea264697066735822122015ff842a39e5dd4c267a78f6bb546f80a92a7347ea38d591acbb05201957443664736f6c634300080a0033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063a99c68c51161004e578063a99c68c51461010b578063ef06734214610148578063f688bcfb14610185578063f8b2cb4f146101ae57610086565b806305abf9041461008b57806315602991146100a2578063365833e1146100b957806351cff8d9146100e257610086565b3661008657005b600080fd5b34801561009757600080fd5b506100a06101eb565b005b3480156100ae57600080fd5b506100b76102fa565b005b3480156100c557600080fd5b506100e060048036038101906100db9190610a40565b61040b565b005b3480156100ee57600080fd5b5061010960048036038101906101049190610acb565b6105ea565b005b34801561011757600080fd5b50610132600480360381019061012d9190610acb565b610770565b60405161013f9190610b07565b60405180910390f35b34801561015457600080fd5b5061016f600480360381019061016a9190610acb565b610788565b60405161017c9190610b07565b60405180910390f35b34801561019157600080fd5b506101ac60048036038101906101a79190610a40565b6107a0565b005b3480156101ba57600080fd5b506101d560048036038101906101d09190610acb565b610982565b6040516101e29190610b07565b60405180910390f35b600064e8d4a510006064600254600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102429190610b80565b61024c9190610bb1565b6102569190610bb1565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016102b3929190610c1a565b6020604051808303816000875af11580156102d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f69190610c7b565b5050565b600064e8d4a510006064600354600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103519190610bb1565b61035b9190610b80565b6103659190610b80565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103c4929190610c1a565b6020604051808303816000875af11580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104079190610c7b565b5050565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461045a9190610ca8565b9250508190555060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016104bf929190610cfe565b602060405180830381865afa1580156104dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105009190610d3c565b905081811015610545576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053c90610dc6565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016105a293929190610de6565b6020604051808303816000875af11580156105c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e59190610c7b565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461066f576040517f4a99cf0800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008190508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106ca9190610e1d565b602060405180830381865afa1580156106e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070b9190610d3c565b6040518363ffffffff1660e01b8152600401610728929190610c1a565b6020604051808303816000875af1158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b9190610c7b565b505050565b60056020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107ef9190610ca8565b925050819055506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610855929190610cfe565b602060405180830381865afa158015610872573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108969190610d3c565b9050818110156108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d290610dc6565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161093a93929190610de6565b6020604051808303816000875af1158015610959573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097d9190610c7b565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109bd9190610e1d565b602060405180830381865afa1580156109da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fe9190610d3c565b9050919050565b600080fd5b6000819050919050565b610a1d81610a0a565b8114610a2857600080fd5b50565b600081359050610a3a81610a14565b92915050565b600060208284031215610a5657610a55610a05565b5b6000610a6484828501610a2b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a9882610a6d565b9050919050565b610aa881610a8d565b8114610ab357600080fd5b50565b600081359050610ac581610a9f565b92915050565b600060208284031215610ae157610ae0610a05565b5b6000610aef84828501610ab6565b91505092915050565b610b0181610a0a565b82525050565b6000602082019050610b1c6000830184610af8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b8b82610a0a565b9150610b9683610a0a565b925082610ba657610ba5610b22565b5b828204905092915050565b6000610bbc82610a0a565b9150610bc783610a0a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0057610bff610b51565b5b828202905092915050565b610c1481610a8d565b82525050565b6000604082019050610c2f6000830185610c0b565b610c3c6020830184610af8565b9392505050565b60008115159050919050565b610c5881610c43565b8114610c6357600080fd5b50565b600081519050610c7581610c4f565b92915050565b600060208284031215610c9157610c90610a05565b5b6000610c9f84828501610c66565b91505092915050565b6000610cb382610a0a565b9150610cbe83610a0a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610cf357610cf2610b51565b5b828201905092915050565b6000604082019050610d136000830185610c0b565b610d206020830184610c0b565b9392505050565b600081519050610d3681610a14565b92915050565b600060208284031215610d5257610d51610a05565b5b6000610d6084828501610d27565b91505092915050565b600082825260208201905092915050565b7f436865636b2074686520746f6b656e20616c6c6f77616e636500000000000000600082015250565b6000610db0601983610d69565b9150610dbb82610d7a565b602082019050919050565b60006020820190508181036000830152610ddf81610da3565b9050919050565b6000606082019050610dfb6000830186610c0b565b610e086020830185610c0b565b610e156040830184610af8565b949350505050565b6000602082019050610e326000830184610c0b565b9291505056fea264697066735822122015ff842a39e5dd4c267a78f6bb546f80a92a7347ea38d591acbb05201957443664736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1859,
        "contract": "contracts/MockDex.sol:MockDex",
        "label": "dai",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 1862,
        "contract": "contracts/MockDex.sol:MockDex",
        "label": "usdc",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 1865,
        "contract": "contracts/MockDex.sol:MockDex",
        "label": "dexARate",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1868,
        "contract": "contracts/MockDex.sol:MockDex",
        "label": "dexBRate",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1872,
        "contract": "contracts/MockDex.sol:MockDex",
        "label": "daiBalances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1876,
        "contract": "contracts/MockDex.sol:MockDex",
        "label": "usdcBalances",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}